// @ts-nocheck
/**
 * Generated by `createschema billing.BillingRecipient 'organization:Relationship:Organization:CASCADE; tin:Text; iec:Text; bic:Text; context?:Relationship:BillingIntegrationOrganizationContext:SET_NULL; bankAccount:Text; name?:Text; approved:Checkbox; meta?:Json;'`
 */

const { canReadBillingEntity, canManageBillingEntityWithContext } = require('@condo/domains/billing/utils/accessSchema')

async function canReadBillingRecipients ({ authentication }) {
    return await canReadBillingEntity(authentication)
}

async function canManageBillingRecipients ({ authentication, operation, originalInput, itemId, listKey, context }) {
    return await canManageBillingEntityWithContext({
        authentication,
        operation,
        itemId,
        originalInput,
        schemaWithContextName: listKey,
        context,
    })
}

/*
  Rules are logical functions that used for list access, and may return a boolean (meaning
  all or no items are available) or a set of filters that limit the available items.
*/
module.exports = {
    canReadBillingRecipients,
    canManageBillingRecipients,
}
